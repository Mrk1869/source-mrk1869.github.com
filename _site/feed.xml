<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title></title>
        <description></description>
        <link>http://mrk1869.com</link>
        <atom:link href="http://mrk1869.com/feed.xml" rel="self" type="application/rss+xml" />
        
            <item>
                <title>GitHubの学割クーポンを延長する</title>
                <description>&lt;p&gt;GitHubにはプライベートリポジトリが無料で使える(billing planが1つ上がる)学割があります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://education.github.com/&quot;&gt;GitHub Education&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;申し込んでから2年が経って「もうすぐクーポン切れるよ」という内容のメールが来ました。「今も学生なので学割クーポンを延長したい」と問い合わせたところ「有効期限が切れてからもう一度WebからアプライすればOKだよ。もし学割が反映される前に次の支払が発生したら連絡してね。」とのことでした。以下、回答です。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’re still a student, you’re welcome to reapply! Check out our shiny new Education page:&lt;/p&gt;

  &lt;p&gt;https://education.github.com/&lt;/p&gt;

  &lt;p&gt;You might get a message about not being able to apply the new coupon. That’s because you can’t have two simultaneous coupons on your account. Once your old coupon expires, you can apply the new coupon. There’s usually a “grace period” of a few days between the expiration and the first charge, but if you do get charged before you add your new coupon, just let us know! Please don’t hesitate to let us know if you have any questions or concerns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;あと学割が切れても既に作成してあるプライベートリポジトリはプライベートのままらしい。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/alpaca_taichou&quot;&gt;@alpaca_taichou&lt;/a&gt; 突然勝手にpublicになるんですか?&lt;/p&gt;&amp;mdash; Kazuki Yoshida (@101kaz) &lt;a href=&quot;https://twitter.com/101kaz/statuses/486756076776214528&quot;&gt;2014, 7月 9&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/alpaca_taichou&quot;&gt;@alpaca_taichou&lt;/a&gt; &lt;a href=&quot;https://twitter.com/101kaz&quot;&gt;@101kaz&lt;/a&gt; あれ切れてもプライベートリポジトリ保持されますよ、新しいのが作れないだけですね。&lt;/p&gt;&amp;mdash; Takehiro Adachi (@takehiro0740) &lt;a href=&quot;https://twitter.com/takehiro0740/statuses/486901860544946176&quot;&gt;2014, 7月 9&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

</description>
                <pubDate>Sat, 12 Jul 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/github_academic/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/github_academic/</guid>
            </item>
        
            <item>
                <title>doctestを使ってpythonの簡単な単体テストを書く</title>
                <description>&lt;p&gt;doctestはpythonに標準で搭載されているテストツールで、docstring(“&quot;”で囲まれたドキュメンテーション文字列)に書かれた対話実行例をテストとして実行します。入力と出力をコメントに記述するだけという非常にシンプルな仕組みなので、ちょっとした処理の確認に役立ちます。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;記述例&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;doctest&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This method returns the average value of args.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(1, 2)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    1.5&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doctest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上記のコードを実行すると&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python hello.py
**********************************************************************
File &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello.py&amp;quot;&lt;/span&gt;, line 6, in __main__.average
Failed example:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Expected:
    0.5
Got:
    1
**********************************************************************
1 items had failures:
   1 of   1 in __main__.average
***Test Failed*** 1 failures.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;テストが失敗しました。除算を用いるので引数を浮動小数点として扱うように修正します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;doctest&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This method returns the average value of args.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(1, 2)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    1.5&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doctest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python hello.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行結果が何も表示されません。すなわちテストが通ったことを意味します。通ったテストのログはオプション-vをつけることで表示することが可能です。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$python&lt;/span&gt; hello.py -v
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Expecting:
    1.5
ok
1 items had no tests:
    __main__
1 items passed all tests:
   1 tests in __main__.average
1 tests in 2 items.
1 passed and 0 failed.
Test passed.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;python--m-doctest--v-&quot;&gt;python -m doctest -v [ファイル名]&lt;/h4&gt;

&lt;p&gt;Python2.6以降にはdoctest.testmod()を実行するコマンドラインショートカット(-m doctest)があり、doctest.testmod()をコード内に記述する必要がなくなりました。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This method returns the average value of args.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(1, 2)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    1.5&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;main関数を空にしてコマンドラインからテストします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m doctest -v hello.py
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Expecting:
    1.5
ok
1 items had no tests:
    hello
1 items passed all tests:
   1 tests in hello.average
1 tests in 2 items.
1 passed and 0 failed.
Test passed.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;テストが実行されました。&lt;/p&gt;

&lt;p&gt;注意点として、doctestは出力の完全一致を求めるので、スペースの有無や辞書の順序に気を配ってテストを書く必要があります。詳しくはドキュメントをご覧ください。&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&quot;http://docs.python.jp/2/library/doctest.html&quot;&gt;25.2. doctest — 対話的な実行例をテストする&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;2014.07.08 追記&lt;/h4&gt;

&lt;p&gt;出力結果をTrue, Falseで判断することで、表記揺れによるテスト失敗を回避することができました。また、この方法では弾く(Falseを想定した)テストも書けるので便利です。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This method returns the average value of numbers.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(0, 2) #failed&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    1&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(0, 2) #ok&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    1.0&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(0, 2) == 1 #ok&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    True&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(0, 2) == 1.0 #ok&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    True&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;gt;&amp;gt;&amp;gt; average(0, 2) == 2.0 #ok&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    False&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m doctest -v hello.py
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#failed&lt;/span&gt;
Expecting:
    1
**********************************************************************
File &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello.py&amp;quot;&lt;/span&gt;, line 4, in hello.average
Failed example:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#failed&lt;/span&gt;
Expected:
    1
Got:
    1.0
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#ok&lt;/span&gt;
Expecting:
    1.0
ok
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 1 &lt;span class=&quot;c&quot;&gt;#ok&lt;/span&gt;
Expecting:
    True
ok
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 1.0 &lt;span class=&quot;c&quot;&gt;#ok&lt;/span&gt;
Expecting:
    True
ok
Trying:
    average&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 2.0 &lt;span class=&quot;c&quot;&gt;#ok&lt;/span&gt;
Expecting:
    False
ok
1 items had no tests:
    hello
**********************************************************************
1 items had failures:
   1 of   5 in hello.average
5 tests in 2 items.
4 passed and 1 failed.
***Test Failed*** 1 failures.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
                <pubDate>Mon, 07 Jul 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/python_doctest/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/python_doctest/</guid>
            </item>
        
            <item>
                <title>brew doctorのwarningを解決する</title>
                <description>&lt;p&gt;brew doctorコマンドで表示されるWarningを順番に解決しました。基本的には指示通りに解決していけばよいのですが、Warning2 pyenvとの干渉が厄介でした。&lt;/p&gt;

&lt;h4 id=&quot;warning1&quot;&gt;Warning1&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Warning: Some directories in /usr/local/share/man aren&lt;span class=&quot;s1&quot;&gt;&amp;#39;t writable.&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;This can happen if you &amp;quot;sudo make install&amp;quot; software that isn&amp;#39;&lt;/span&gt;t managed
by Homebrew. If a brew tries to add locale information to one of these
directories, &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;the install will fail during the link step.
You should probably &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;chown&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; them:

    /usr/local/share/man/de
    /usr/local/share/man/de/man1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一部のディレクトリの所有者がbrewを使うユーザになっていない問題。chownコマンドで所有者を変更します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo chown -R &lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt; /usr/local/share/man/de&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;warning2&quot;&gt;Warning2&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Warning: &lt;span class=&quot;s2&quot;&gt;&amp;quot;config&amp;quot;&lt;/span&gt; scripts exist outside your system or Homebrew directories.
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;./configure&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; scripts often look &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; *-config scripts to determine &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;
software packages are installed, and what additional flags to use when
compiling and linking.

Having additional scripts in your path can confuse software installed via
Homebrew &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the config script overrides a system or Homebrew provided
script of the same name. We found the following &lt;span class=&quot;s2&quot;&gt;&amp;quot;config&amp;quot;&lt;/span&gt; scripts:

    /Users/shoya/.pyenv/shims/python-config
    /Users/shoya/.pyenv/shims/python2-config
    /Users/shoya/.pyenv/shims/python2.7-config&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;homebrewの管理外かつPATHが通っているところにconfigスクリプトが存在する問題。深刻な問題ではないようなので、このWarningが表示されないよう回避する方向で。brewコマンドを実行するときだけ~/.pyenv/shims/をPATHから取り除くエイリアスを.bashrcに追記した。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;brew&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;env PATH=${PATH/\/Users\/${USER}\/\.pyenv\/shims:?/} brew&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;参考:&lt;a href=&quot;http://qiita.com/takc923/items/45386905f70fde9af0e7&quot;&gt;phpenv入れてる時brew doctorしたら出るWarning消した&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;warning3&quot;&gt;Warning3&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Warning: Some directories in your path end in a slash.
Directories in your path should not end in a slash. This can &lt;span class=&quot;nb&quot;&gt;break &lt;/span&gt;other
doctor checks. The following directories should be edited:
    /Applications/MacVim.app/Contents/MacOS/    /Users/shoya/software/android-ndk/    /Users/shoya/software/android-sdk/platform-tools/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;PATHが/(スラッシュ)で終わるのはよくないらしい。.bashrcを編集してそれぞれ最後のスラッシュを取り除きました。&lt;/p&gt;

&lt;h4 id=&quot;warning4&quot;&gt;Warning4&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Warning: /usr/bin occurs before /usr/local/bin
This means that system-provided programs will be used instead of those
provided by Homebrew. The following tools exist at both paths:

    git
    git-cvsserver
    git-receive-pack
    git-shell
    git-upload-archive
    git-upload-pack

Consider setting your PATH so that /usr/local/bin
occurs before /usr/bin. Here is a one-liner:
    &lt;span class=&quot;nb&quot;&gt;echo export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/usr/local/bin:$PATH&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;PATHの順番がよくない。PATHは前方に書かれてあるものが優先されるので、bashrcを見てPATH=(追加するPATH):$PATHの形になっていないものを修正しました。&lt;/p&gt;

&lt;h4 id=&quot;warning5&quot;&gt;Warning5&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Warning: Your Homebrew is outdated.
You haven&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;t updated &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;at least 24 hours, this is a long &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;in brewland!
To update Homebrew, run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;brew update&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;homebrewをアップデートします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;warning&quot;&gt;すべてのWarningを取り除いたので&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew doctor
&amp;gt;&amp;gt; Your system is ready to brew.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;診断結果が正常になりました。めでたい。&lt;/p&gt;
</description>
                <pubDate>Fri, 04 Jul 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/brew_doctor/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/brew_doctor/</guid>
            </item>
        
            <item>
                <title>プロセスが完了しました</title>
                <description>&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/terminal01.png&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;問題&lt;/h4&gt;

&lt;p&gt;Macのターミナルが起動しない。起動するとすぐに[プロセスが完了しました]と表示される。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;原因&lt;/h4&gt;

&lt;p&gt;ユーザ名が - から始まっている&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;解決策&lt;/h4&gt;

&lt;p&gt;ユーザ名を変更する(システム環境設定&amp;gt;ユーザとグループ&amp;gt;詳細オプション)。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ユーザ名の変更は多くのアプリケーションの動作に影響を及ぼす可能性があります。バックアップをとったのち、慎重に実行してください。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/terminal02.png&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Macのターミナルが動かないという報告を受けたのだけれど、原因はユーザ名がマイナスから始まっていたことだった。-piyoのようなユーザ名はloginコマンドのプションとして認識されてしまうので(もちろんそんなオプションはない)ターミナルでログインできない。なんだそれ…&lt;/p&gt;
</description>
                <pubDate>Sat, 21 Jun 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/terminal_login/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/terminal_login/</guid>
            </item>
        
            <item>
                <title>クックパッドのデザイン講演会に参加しました</title>
                <description>&lt;p&gt;京都のCAMPHOR-HOUSEにて、クックパッドのデザイン責任者・池田さんによる講演会が開催されました。「クックパッドのサービス開発とデザイン」というタイトルで、「決してインターネットに詳しいわけではない方にまでに幅広く支持されているデザインの裏側には、どういった工夫やこだわりがあるか」というお話をしていただきました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/cookpad_design.jpg&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;デザインの原則&lt;/h4&gt;

&lt;p&gt;クックパッドでは、サービス開発の軸がぶれないように、いくつかの「デザインの原則」を設けているとのこと。例えば&lt;strong&gt;全体最適の原則&lt;/strong&gt;。各自が作ったデザインをライブラリ化して共有したり、アイコンをWebフォントにして、クックパッド全体のブランドデザインを保つためのルールです。&lt;strong&gt;無言語化の原則&lt;/strong&gt;。機能を説明するのにできるだけ言葉を使わず、ぱっと見て分かるデザインを心がけるルールです。&lt;strong&gt;無言実行の原則&lt;/strong&gt;。プロダクトの概念やコンセプトを利用者にいちいち説明するのではなく、利用者にはプロダクトそのもので評価してもらうべきというルールです。ほかにもBEST集中の原則、競合を知る原則、顧客中心の原則などがあり、勉強になりました。&lt;/p&gt;

&lt;h4 id=&quot;ab&quot;&gt;A/Bテストの指標&lt;/h4&gt;

&lt;p&gt;A/Bテストについての話がでたので、「定量的に評価できる数字とユーザ体験は時としてトレードオフの関係にあるが、どうやって折り合いをつけているか」という質問をしました。「例えばあるボタンを大きくすれば新規会員数は増えるとしても、もちろん大きすぎるボタンにはNGをだす」との回答でした。「その(大きすぎるなどの)感覚値的な指標はどうやって測っているか」という質問には、「私(池田さん)の主観で決めます」という回答をいただきました。(ここでデザインの原則に繋がると思っていたので少し残念。) 利用者や利用シーンを具体的に想定して、それぞれの人にとって馴染みやすいデザインを考えることで、良し悪しを決めるとのことでした。&lt;/p&gt;

&lt;p&gt;属人的になりがちなデザインの知見を社内でどうやって共有するかといった、興味深いお話を聞くことができました。ありがとうございました！&lt;/p&gt;
</description>
                <pubDate>Sat, 14 Jun 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/cookpad_design/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/cookpad_design/</guid>
            </item>
        
            <item>
                <title>Jawbone UPのちょっと変わった使い方</title>
                <description>&lt;p&gt;UPを使い始めて1年が経つ。UPは運動・睡眠・食事を記録するライフログツールなんだけど、生活の記録以外にも、振動するデバイスを腕につけるっていうところに面白みを感じている。ということでちょっと変わった使い方をしているので、それらを紹介しようと思う。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/up2.jpg&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;ポモドーロテクニック&lt;/h4&gt;

&lt;p&gt;UPにはパワーナップ(お昼寝)という機能がついていて、セットした時間がたつと振動で起こしてくれる。自分はこの機能をポモドーロテクニックのタイマーとして使っている。一般的なタイマー、気に入らない点がふたつある。まず、画面が視界に入ると残り時間が気になってしかたがないこと。そして、音で知らせてくれるものは周りが気になる静かな場所では使えないこと。その点UPは時間経過を表示する画面がないし振動で自分にしか通知されないっていうのがいい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://akio0911.net/archives/18848&quot;&gt;UP by Jawboneでポモドーロテクニックしたら作業に集中できた - 拡張現実ライフ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;「UPでポモドーロ」というアイデアはこちらの記事を参考にさせていただいた。でもアイドルアラートに割り当てると毎回iPhoneと接続してアプリから開始する必要があるので、パワーナップに割り当てることにした。パワーナップだとUPのボタン入力だけでタイマーをセットできて便利。&lt;/p&gt;

&lt;p&gt;作業用のタイマーをパワーナップに割り当てると、作業時間が睡眠として記録されてしまうのでログが乱れるというデメリットもある。自分は日中の睡眠ログを見ていないので問題ないけれど、お昼寝のログをとりたい人にはこの方法は向かないかもしれない。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;寝落ちを防止する&lt;/h4&gt;

&lt;p&gt;アイドルアラートをポモドーロに使わないのには、夜中にセットしたいからという理由もある。アイドルアラートとは、日中にしばらく体を動かしていないとそれを検知して運動を促す機能。このアラートが動く時間帯を0:00 ~ 3:00にセットしている。この設定で、夜中にうとうとしてしまっても振動で起こしてくれて、ちゃんと布団に入って寝ようっていう気にさせてくれる。&lt;/p&gt;

&lt;p&gt;睡眠ログを記録するためには寝る前にUPをスリープモードに切り替える必要がある。スリープモードになっている間はアイドルアラートは鳴らないので、普通に寝ているときは睡眠を邪魔されなくてすむ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/up.jpg&quot; class=&quot;image-on-frame-small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jawbone UP、日常生活に馴染んでいてすごい。体に身につけているという実感すら感じさせなくなった時、そのデバイスはウェアラブルになれるのだと思う。&lt;/p&gt;
</description>
                <pubDate>Fri, 16 May 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/up/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/up/</guid>
            </item>
        
            <item>
                <title>Chefのknife solo prepareで404</title>
                <description>&lt;h4 id=&quot;section&quot;&gt;問題&lt;/h4&gt;

&lt;p&gt;Chefでknife solo prepareがうまく実行されない。Chef 11.14.0.alpha.2のwgetで404が返ってくるのが問題。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;shoya@tornado&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;knife solo prepare dev_debian
Bootstrapping Chef...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 15934  100 15934    0     0   2238      0  0:00:07  0:00:07 --:--:--  9674
Downloading Chef 11.14.0.alpha.2 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;debian...
downloading https://www.opscode.com/chef/metadata?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11.14.0.alpha.2&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prerelease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nightlies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64
  to file /tmp/install.sh.2565/metadata.txt
trying wget...
ERROR 404
Unable to retrieve a valid package!
Please file a bug report at http://tickets.opscode.com
Project: Chef
Component: Packages
Label: Omnibus
Version: 11.14.0.alpha.2

Please detail your operating system &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;, version and any other relevant details
Metadata URL: https://www.opscode.com/chef/metadata?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11.14.0.alpha.2&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prerelease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nightlies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64
Generating node config &lt;span class=&quot;s1&quot;&gt;&amp;#39;nodes/dev_debian.json&amp;#39;&lt;/span&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;解決&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/23591190/knife-solo-prepare-fails&quot;&gt;Knife-solo prepare fails - stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;opscode(version 11.14.0.alpha.2)側の問題なので、オプションでchefのバージョンを指定してあげるといいよとの回答。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;shoya@tornado&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;knife solo prepare dev_debian --bootstrap-version 11.12.0
Bootstrapping Chef...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 15934  100 15934    0     0   2345      0  0:00:06  0:00:06 --:--:-- 14026
Downloading Chef 11.12.0 &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;debian...
downloading https://www.opscode.com/chef/metadata?v&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11.12.0&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prerelease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nightlies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64
  to file /tmp/install.sh.2608/metadata.txt
trying wget...
url    https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chef_11.12.0-1_amd64.deb
md5    e3cefe75258f5d737b729ed549cadfc5
sha256    3707bb7781317ce2928378564b95675291b9c3daa10a879bc77bea1333c83a9b
downloaded metadata file looks valid...
downloading https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chef_11.12.0-1_amd64.deb
  to file /tmp/install.sh.2608/chef_11.12.0-1_amd64.deb
trying wget...
Comparing checksum with sha256sum...
Installing Chef 11.12.0
installing with dpkg...
Selecting previously unselected package chef.
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Reading database ... 39953 files and directories currently installed.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Unpacking chef &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from .../chef_11.12.0-1_amd64.deb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
Setting up chef &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11.12.0-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
Thank you &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;installing Chef!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;新しいバージョンが提供されるまではこれが応急処置みたい。&lt;/p&gt;
</description>
                <pubDate>Tue, 13 May 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/chef_prepare/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/chef_prepare/</guid>
            </item>
        
            <item>
                <title>Grunt+BowerでつくるWebアプリケーションひな形</title>
                <description>&lt;p&gt;ハッカソンに参加するときとか、ちょっとしたWebサイトをつくるときとか、アプリケーションのテンプレートを持っていると開発にかかる時間を大きく短縮できる。特にbootstrapやjQueryをダウンロードして、過去のリソースを切り貼りして…という作業を毎回行うのは面倒なので、自分用のWebアプリケーションひな形を作成した。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Mrk1869/updraft&quot;&gt;Mrk1869/updraft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tornadoのひな形なのでupdraft(上昇気流)と呼んでいるけど、main.pyを変更すれば静的なサイトやsinatraのプロジェクトでも利用できる。&lt;/p&gt;

&lt;h4 id=&quot;span-classlsfcheckspan-features&quot;&gt;&lt;span class=&quot;lsf&quot;&gt;check&lt;/span&gt; Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;bootstrap, jQuery, backbone, underscoreのセットアップ&lt;/li&gt;
  &lt;li&gt;Gruntを使ったcoffee scriptとsassの自動コンパイル&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;span-classlsfsetupspan-require&quot;&gt;&lt;span class=&quot;lsf&quot;&gt;setup&lt;/span&gt; Require&lt;/h4&gt;

&lt;p&gt;bower, grunt, coffee, sassを使うので、インストールしていなければ準備が必要。npmコマンドが使えない場合は、導入はNodeとパッケージ管理システム(Macの場合はHomebrewなど)について勉強してからのほうがいいかもしれない。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install -g bower
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install -g grunt-cli
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install -g coffee-script
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install sass&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;span-classlsfsetupspan-installation&quot;&gt;&lt;span class=&quot;lsf&quot;&gt;setup&lt;/span&gt; Installation&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Mrk1869/updraft&quot;&gt;Mrk1869/updraft&lt;/a&gt; からデータをダウンロードしてきたら、そのディレクトリに入って&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 必要なパッケージをインストール&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install

&lt;span class=&quot;c&quot;&gt;# bootstrapなどをダウンロードしてassets/以下に配置する&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;grunt bower:install

&lt;span class=&quot;c&quot;&gt;# coffee, sassの監視を開始する&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;grunt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これでひな形の準備は完了です。&lt;/p&gt;

&lt;p&gt;以下は補足説明。&lt;/p&gt;

&lt;h4 id=&quot;span-classlsfcodespan-bowerjson&quot;&gt;&lt;span class=&quot;lsf&quot;&gt;code&lt;/span&gt; bower.json&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;updraft&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Web application template&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;ignore&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;**/.*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;bower_components&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;tests&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;bootstrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~3.1.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;backbone&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~1.1.2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;underscore&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~1.6.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;jquery&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~2.1.1&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;exportsOverride&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//main fileが設定されていないライブラリをassetsにコピーするための設定&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;bootstrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dist/js/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;css&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dist/css/bootstrap.min.css&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;backbone&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;backbone.js&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;underscore&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;underscore.js&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;jquery&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dist/jquery.min.js&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bowerとはフロントエンド用のパッケージマネージャ。jQueryやTwitterBootstrapなどの定番ライブラリを、サイトを巡回することなく下記のようなコマンドで集めてくることができる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bower install jquery&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;しかしbowerでインストールしたライブラリはbower_components以下の複雑な場所に配置されるため、それらを扱いやすい場所(assets/ lib/など)にコピーしたい。そこでGruntを使う。コピーの対象となるファイルをmain fileとして設定していないライブラリもあるので、コメント部のようにjs, cssファイルの場所を指定する必要がある。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2013/06/01/173308&quot;&gt;参考: Bower入門(基礎編) - from scratch&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;span-classlsfcodespan-gruntfilejs&quot;&gt;&lt;span class=&quot;lsf&quot;&gt;code&lt;/span&gt; Gruntfile.js&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// bowerでインストールしたライブラリをassets以下に置く&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bower&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;targetDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./assets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;byType&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;cleanTargetDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;cleanBowerDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// sassのコンパイル&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/_scss/*.scss&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/css/style.css&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// coffeeのコンパイル&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;coffee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/_coffee/*.coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/js/script.js&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// sassとcoffeeの更新を監視する&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;scss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/_scss/*.scss&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;coffee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assets/_coffee/*.coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grunt-bower-task&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grunt-contrib-watch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grunt-contrib-sass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grunt-contrib-coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;grunt-bower-taskによってライブラリをコピーする。はじめの方にあるbower:installはそれに関する設定。grunt-contrib-watchによってsassとcoffeeの更新を検知して、sass:compile, coffee:compileタスクを実行するよう設定している。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;5/11 追記&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/naoya/20130504/1367640512&quot;&gt;昨今の自分用Webアプリケーションひな形その2 - Grunt - naoyaのはてなダイアリー&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;を参考に、Gruntfileをcoffeeに書きなおしました。また、Procfileを作成して&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;application: python main.py --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8000 --debug&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;True
grunt: grunt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;foreman startでgruntとtornadoが起動するようにしました。&lt;/p&gt;
</description>
                <pubDate>Fri, 09 May 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/updraft/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/updraft/</guid>
            </item>
        
            <item>
                <title>2014年におけるMac TeX環境</title>
                <description>&lt;p&gt;TeXの環境、あまりに情報が多すぎて、自分がどの設定でインストールしたのか忘れてしまう。
特に古い情報だとソフトウェアのバージョンの違いでハマるので、2014年5月現在のTeX環境を記しておく。&lt;/p&gt;

&lt;h4 id=&quot;mactex&quot;&gt;1. MacTeX&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://tug.org/mactex/&quot;&gt;MacTeXをダウンロード&lt;/a&gt;してインストール。コンパイルに使うコマンドや便利なGUIツールを一括してセットアップしてくれる。コマンドからTexファイルをコンパイルするための設定はこれで完了。&lt;/p&gt;

&lt;h4 id=&quot;texshop&quot;&gt;2. TeXShop&lt;/h4&gt;

&lt;p&gt;MacTex(2013)にパッケージされているTeXShopのバージョンは古いため、最新のものに置き換える必要がある。まず&lt;a href=&quot;http://pages.uoregon.edu/koch/texshop/&quot;&gt;TeXShop3をダウンロード&lt;/a&gt;する。次に/Applications/TeX/に存在するTeXShopを削除して新しいものを置く。&lt;/p&gt;

&lt;p&gt;TexShopを起動したら、環境設定を行う。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/12208857/img/mac_tex.png&quot; class=&quot;image-on-frame-medium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;左下の設定プロファイルをpTex(ptex2pdf)に変更する。(お好みで)エンコーディングのデフォルトをUTF-8にしておく。&lt;/p&gt;

&lt;p&gt;以上です。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;おまけ&lt;/h4&gt;

&lt;p&gt;TexShopはタイプセットボタンで簡単に結果出力できるし、仕上がりと見比べなら執筆しやすい。一方で、集中してがっつり書きたいときは使い慣れたエディタが執筆に適していると思う。
だからTeXで論文を書くときは、書き始めはVim、推敲はTeXShop、と使い分けている。&lt;/p&gt;

&lt;p&gt;Vimで書いているときはコマンドからコンパイルするので、一連の処理をまとめたスクリプトを用意している。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# default file name&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;paper&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# get file name from parameter&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# make .dvi and .pdf file&lt;/span&gt;
platex &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.tex
pbibtex &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.aux
platex &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.tex
dvipdfmx -p a4 &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.dvi

&lt;span class=&quot;c&quot;&gt;# preview&lt;/span&gt;
open &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あと研究室秘伝のテンプレートファイルは往々にしてShift-JISだったりするので、UTF-8に変換してから使っている。
変換後は円マークをバックスラッシュに置換する必要がある。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;iconv -s -f SHIFT_JIS -t UTF-8 paper.tex &amp;gt; paper_utf8.tex
sed -e &lt;span class=&quot;s1&quot;&gt;&amp;#39;s/¥/\\/g&amp;#39;&lt;/span&gt; paper_utf8.tex &amp;gt; paper_out.tex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://mizchi.hatenablog.com/entry/2014/01/20/090957&quot;&gt;参考: markdown-&amp;gt;TeXの変換だけで卒論を仕上げるのに便利だったツール10個まとめ - mizchi’s blog&lt;/a&gt;&lt;/p&gt;
</description>
                <pubDate>Sat, 03 May 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/mac_tex/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/mac_tex/</guid>
            </item>
        
            <item>
                <title>Quick Response</title>
                <description>&lt;p&gt;メールをできるだけ早く返すように心がけている。そう思うようになったきっかけは「&lt;a href=&quot;http://book-mrk1869.tumblr.com/post/83999920951&quot;&gt;MITメディアラボ  魔法のイノベーション・パワー&lt;/a&gt;」という本のなかのこの一節。簡潔な返事が良い。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ある日の午後、私はリハビリ・セッションを終えた母親に会うためにリハビリ病棟の食堂で待っているあいだ、ヒュー・ハーにメールを送った。「ヒュー、この高齢化社会で、お年寄りの転倒を減らすことができれば、これまでのがん研究なんかよりもずっと、人々の生活向上に貢献できると思うんだけれどね。ぜひその方法を考えるべきだ」&lt;br /&gt;
すぐにヒューからメールが返ってきた。「今スキー中。あとで考えてみる」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;時間のかかるタスクを含むメールが来た時を考える。タスクをすべて終わらせてか返信すると、時間がかかってよくない。こちらのメールが届くまで相手の作業を止めていることもあるので、自分がそれらにいつ取り掛かれるか、今どれくらい終えているのかを先に知らせるべきである。手がふさがっている場合は読んだことだけ伝えることも大切だと考えている。&lt;/p&gt;

&lt;p&gt;また、返信が遅れるとこんなスパイラルに陥ってしまうことがある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;メールが来る--&amp;gt;返信が遅れる--&amp;gt;遅れたぶん, きちんとした文章で返信しよう--&amp;gt;文面悩む--&amp;gt;返信が遅れる--&amp;gt;(繰り返し)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;進捗報告の遅延と同じである。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;進捗どうですか--&amp;gt;報告が遅れる--&amp;gt;遅れたぶん, 期待値を上回る成果を出してから報告しよう--&amp;gt;成果まだ足りない--&amp;gt;報告が遅れる--&amp;gt;(繰り返し)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;誰かを待たせることで、自分の中で(勝手に)期待値を上げてしまうのよくない。&lt;/p&gt;

&lt;p&gt;一方で、最近は(物理的にも社会的にも)窓口が増えて、取りこぼしてしまう連絡も増えた。ということで、送ってから2日ほど経っても何の連絡がない場合は、見逃している可能性が高いので遠慮なく催促してください。&lt;/p&gt;
</description>
                <pubDate>Tue, 29 Apr 2014 00:00:00 +0900</pubDate>
                <link>http://mrk1869.com/blog/quick_response/</link>
                <guid isPermaLink="true">http://mrk1869.com/blog/quick_response/</guid>
            </item>
        
    </channel>
</rss>
